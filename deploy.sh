#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è TRIVE AI-–ö–æ–ø–∏—Ä–∞–π—Ç–µ—Ä –Ω–∞ —Å–µ—Ä–≤–µ—Ä
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy.sh user@server.com /path/to/project

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ $# -ne 2 ]; then
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 user@server.com /path/to/project"
    echo "–ü—Ä–∏–º–µ—Ä: $0 root@myserver.com /var/www/trive"
    exit 1
fi

SERVER=$1
PROJECT_PATH=$2
PROJECT_NAME="ai_copywrigt_trive"

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ TRIVE AI-–ö–æ–ø–∏—Ä–∞–π—Ç–µ—Ä –Ω–∞ $SERVER"
echo "üìÅ –ü—É—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: $PROJECT_PATH"

# 1. –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –ø—Ä–æ–µ–∫—Ç–∞ (–∏—Å–∫–ª—é—á–∞—è node_modules –∏ venv)
echo "üì¶ –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ –ø—Ä–æ–µ–∫—Ç–∞..."
tar --exclude='node_modules' --exclude='venv' --exclude='.git' --exclude='*.log' \
    -czf ${PROJECT_NAME}.tar.gz .

# 2. –ó–∞–≥—Ä—É–∑–∫–∞ –∞—Ä—Ö–∏–≤–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
echo "üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º –∞—Ä—Ö–∏–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
scp ${PROJECT_NAME}.tar.gz $SERVER:/tmp/

# 3. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
echo "üîß –í—ã–ø–æ–ª–Ω—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
ssh $SERVER << EOF
    set -e
    
    echo "üìÇ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞..."
    sudo mkdir -p $PROJECT_PATH
    sudo chown \$(whoami):\$(whoami) $PROJECT_PATH
    
    echo "üì¶ –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –ø—Ä–æ–µ–∫—Ç..."
    cd $PROJECT_PATH
    tar -xzf /tmp/${PROJECT_NAME}.tar.gz
    
    echo "üßπ –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã..."
    rm /tmp/${PROJECT_NAME}.tar.gz
    
    echo "üêç –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
    cd ai_backend
    python3 -m venv venv
    source venv/bin/activate
    pip install -r requirements.txt
    
    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è backend..."
    cd ../backend
    npm install
    
    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è frontend..."
    cd ../frontend
    npm install
    
    echo "üèóÔ∏è –°–æ–±–∏—Ä–∞–µ–º frontend..."
    npm run build
    
    echo "üîß –°–æ–∑–¥–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å—ã..."
    sudo tee /etc/systemd/system/trive-backend.service > /dev/null << 'SERVICE'
[Unit]
Description=TRIVE Backend API
After=network.target

[Service]
Type=simple
User=\$(whoami)
WorkingDirectory=$PROJECT_PATH/backend
Environment=NODE_ENV=production
Environment=PORT=4000
ExecStart=/usr/bin/node app.js
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
SERVICE

    sudo tee /etc/systemd/system/trive-ai.service > /dev/null << 'SERVICE'
[Unit]
Description=TRIVE AI Assistant API
After=network.target

[Service]
Type=simple
User=\$(whoami)
WorkingDirectory=$PROJECT_PATH/ai_backend
Environment=PATH=$PROJECT_PATH/ai_backend/venv/bin
ExecStart=$PROJECT_PATH/ai_backend/venv/bin/python -m uvicorn ai_backend.main:app --host 0.0.0.0 --port 8001
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
SERVICE

    sudo tee /etc/systemd/system/trive-frontend.service > /dev/null << 'SERVICE'
[Unit]
Description=TRIVE Frontend
After=network.target

[Service]
Type=simple
User=\$(whoami)
WorkingDirectory=$PROJECT_PATH/frontend
ExecStart=/usr/bin/npx serve -s dist -l 3000
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
SERVICE

    echo "üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º systemd..."
    sudo systemctl daemon-reload
    
    echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã..."
    sudo systemctl enable trive-backend
    sudo systemctl enable trive-ai
    sudo systemctl enable trive-frontend
    
    sudo systemctl start trive-backend
    sudo systemctl start trive-ai
    sudo systemctl start trive-frontend
    
    echo "‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤..."
    sudo systemctl status trive-backend --no-pager
    sudo systemctl status trive-ai --no-pager
    sudo systemctl status trive-frontend --no-pager
    
    echo "üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx..."
    sudo tee /etc/nginx/sites-available/trive > /dev/null << 'NGINX'
server {
    listen 80;
    server_name _;
    
    # Frontend
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_cache_bypass \$http_upgrade;
    }
    
    # Backend API
    location /api/ {
        proxy_pass http://localhost:4000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_cache_bypass \$http_upgrade;
    }
    
    # AI API
    location /generate/ {
        proxy_pass http://localhost:8001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_cache_bypass \$http_upgrade;
    }
}
NGINX

    sudo ln -sf /etc/nginx/sites-available/trive /etc/nginx/sites-enabled/
    sudo nginx -t
    sudo systemctl reload nginx
    
    echo "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    echo "üì± Frontend: http://$(hostname -I | awk '{print $1}')"
    echo "üîß Backend API: http://$(hostname -I | awk '{print $1}'):4000"
    echo "ü§ñ AI API: http://$(hostname -I | awk '{print $1}'):8001"
    echo "üìö API Docs: http://$(hostname -I | awk '{print $1}'):4000/api/docs"
EOF

# 4. –û—á–∏—Å—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∞—Ä—Ö–∏–≤–∞
echo "üßπ –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã..."
rm ${PROJECT_NAME}.tar.gz

echo "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .env —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
echo "2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö PostgreSQL"
echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
echo ""
echo "üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
echo "sudo systemctl status trive-backend"
echo "sudo systemctl status trive-ai"
echo "sudo systemctl status trive-frontend"
echo "sudo systemctl restart trive-backend"
echo "sudo journalctl -u trive-backend -f" 